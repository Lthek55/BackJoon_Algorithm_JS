def solution(arr, n):
    # 1. arr 값중에서 n 의 값 보다 작은 수를 제거한 배열을 구한다.
    # 1.1 1 에서 구한 배열값을 순회하며 주어진 n 값 보다 큰 첫번째 값을 반환한다.
    # 1.A (반려 사유) 1 에서 제거한 값중에서 n 값에 가까운 수가 존재하는 경우가 있을 수 있다.
    
    # 2. arr 배열을 순회하며 각 인자의 값과 n 의 차이값을 저장해두고 비교하여 답을 구한다.
    
    # 3. arr 배열을 순회하는 과정에서 각 인자와 n 의 차이값 ( 절대값 ) 으로 새로운 배열을 만든다. 
    # 3.1 가장 작은 인자값이 있는 인덱스를 찾고 해당 인덱스를 기반으로 arr 에 위치한 인자값을 반환한다.
    
    # 4. arr 의 각 인자값과 n 의 차이값을 ( 절대값 ) dict 형태로 맵핑해서 저장한다.
    # 4.1 dict 값을 value 기준으로 정렬한다.
    # 4.2 정렬된 dict 값에서 dict[0] > 첫번째 tuple 접근, dict[0][0] > 첫번째 tuple 의 첫번째 인자 접근
    # 4.3 반례 추가: arr 가 정렬되어 있지 않는 경우 동일한 차이값 발생시 구해진 값중 작은값보다 큰값이 반환될 수 있다.
    
    k = {}
    m = 101
    arr.sort()
    for i in arr:
        k[i] = abs(i - n)
        
    ans = sorted(k.items(), key = lambda x : x[1])
    return ans[0][0]
    
        